name: Publish to Docker Hub

on: 
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      project_path:
        required: false
        type: string
        default: .
      dotnet-version:
        required: false
        type: string
        default: 8.0.x
    secrets:
      ACCESS_TOKEN:
        required: true
      DOCKER_USER:
        required: true
      DOCKER_PASS:
        required: true
  
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H-%M-%S')"
      
      - name: Checkout submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.image-name }}
          tags: |
            type=semver,pattern={{version}}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '${{ inputs.dotnet-version }}'
          
      - name: Publish and push the container image
        run: |
          echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin
          mkdir -p ~/.docker
          echo "{\"auths\":{\"index.docker.io\":{\"auth\":\"$(echo -n ${{ secrets.DOCKER_USER }}:${{ secrets.DOCKER_PASS }} | base64)\"}}}" > ~/.docker/config.json
          dotnet publish ${{ inputs.project_path }} --os linux --arch x64 -c Release /p:WebPublishMethod=Container /p:ContainerPublishMethod=NetSdk /p:RegistryUrl=index.docker.io /p:UserName=smixers /p:PublishProvider=ContainerRegistry /p:LastUsedBuildConfiguration=Release /p:RuntimeIdentifier=linux-x64 /p:_TargetId=NetSdkDockerContainerRegistry /p:ContainerImageTags="latest,${{ steps.date.outputs.date | gsub(':', '-') }}"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Release ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

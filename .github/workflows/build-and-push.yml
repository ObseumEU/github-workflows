name: Build-and-push

on: 
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      context:
        required: false
        type: string
        default: .
      tests:
        required: false
        type: boolean
        default: false
    secrets:
      ACCESS_TOKEN:
        required: true
      DOCKER_USER:
        required: true
      DOCKER_PASS:
        required: true
        
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H-%M-%S')"
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ACCESS_TOKEN }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ inputs.image }}
          tags: |
            type=semver,pattern={{version}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          push: true
          file: ${{ inputs.dockerfile }}
          tags: ${{ inputs.image }}:latest,${{ inputs.image }}:${{ steps.date.outputs.date }}
          github: ${{ secrets.ACCESS_TOKEN }}
          cache-from: type=gha 
          build-args: |
            RUN_TESTS=${{ inputs.tests }}
          cache-to: type=gha,mode=max      
      - name: Tag and push current repo code
        run: |
          git tag ${{ steps.date.outputs.date }}
          git push origin ${{ steps.date.outputs.date }}
          
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Release ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false
